name: Windows Build (MSYS2 MinGW, Qt6 + OpenCV prebuilt)

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # MSYS2 z UCRT64 (priporočeno); namestimo Qt6 + OpenCV + orodja
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          release: true
          update: true
          msystem: UCRT64
          install: >
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-qt6-base
            mingw-w64-ucrt-x86_64-qt6-tools
            mingw-w64-ucrt-x86_64-opencv
            zip

      - name: Configure (CMake + Ninja)
        shell: msys2 {0}
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release --parallel

      - name: Find EXE
        id: findexe
        shell: bash
        run: |
          EXE=$(ls -1 build/**/*.exe build/*.exe 2>/dev/null | head -n1)
          if [ -z "$EXE" ]; then echo "EXE not found"; exit 1; fi
          echo "EXE=$EXE" >> $GITHUB_ENV
          echo "Found $EXE"

      # Zberemo Qt/MinGW runtime (preko windeployqt v MSYS2)
      - name: Bundle Qt runtimes
        shell: msys2 {0}
        run: |
          EXE_WIN=$(cygpath -w "$EXE")
          windeployqt-qt6 --release "$EXE_WIN"

      # Kopiramo OpenCV in MinGW DLL-je (MSYS2 paketi)
      - name: Copy OpenCV + MinGW runtimes
        shell: msys2 {0}
        run: |
          BIN_DIR=$(dirname "$EXE")
          cp /ucrt64/bin/libopencv*.dll "$BIN_DIR"/
          # MinGW runtime (libstdc++/libgcc/winpthread) priloži windeployqt, po potrebi dodamo:
          cp /ucrt64/bin/libstdc++-*.dll "$BIN_DIR"/ || true
          cp /ucrt64/bin/libgcc_s_*.dll "$BIN_DIR"/ || true
          cp /ucrt64/bin/libwinpthread-*.dll "$BIN_DIR"/ || true

      - name: Package ZIP
        shell: msys2 {0}
        run: |
          BIN_DIR=$(dirname "$EXE")
          cd "$BIN_DIR"/..
          ZIP="$RUNNER_TEMP/LiveVideoMagnification-msys2.zip"
          zip -r "$ZIP" "$(basename "$BIN_DIR")"
          echo "ZIP=$ZIP" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LiveVideoMagnification-msys2
          path: ${{ env.ZIP }}
