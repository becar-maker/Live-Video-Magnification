name: Windows Build (Qt6 + OpenCV via vcpkg)

on:
  workflow_dispatch: {}   # ročni zagon (nič več auto na push)

jobs:
  build:
    runs-on: windows-latest

    # Ne uporabljamo ${{ runner.temp }} tukaj.
    env:
      VCPKG_ROOT: C:\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows
      QT_VERSION: 6.7.2
      QT_DIR: C:\Qt\6.7.2\msvc2022_64

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        shell: pwsh
        run: |
          python -m pip install --upgrade pip aqtinstall
          choco install -y ninja 7zip

      - name: Install Qt (MSVC 2022)
        shell: pwsh
        run: |
          aqt install-qt windows desktop $env:QT_VERSION win64_msvc2022_64 -O C:\Qt -m qtbase qtimageformats

      - name: Setup vcpkg + OpenCV (with ffmpeg)
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg $env:VCPKG_ROOT
          & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat"
          & "$env:VCPKG_ROOT\vcpkg.exe" install "opencv[ffmpeg]:x64-windows"

      - name: Configure (CMake + Ninja)
        shell: pwsh
        run: |
          cmake -S . -B build -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake" `
            -DCMAKE_PREFIX_PATH="$env:QT_DIR"

      - name: Build
        shell: pwsh
        run: cmake --build build --config Release --parallel

      - name: Locate EXE
        id: findexe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path build -Recurse -Filter *.exe |
            Where-Object { $_.Name -notmatch 'cmake|ctest' } |
            Select-Object -First 1
          if (-not $exe) { throw "EXE not found" }
          "EXE=$($exe.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Found $($exe.FullName)"

      - name: Deploy Qt runtimes (windeployqt)
        shell: pwsh
        run: |
          & "$env:QT_DIR\bin\windeployqt.exe" --release --compiler-runtime "$env:EXE"

      - name: Copy OpenCV DLLs
        shell: pwsh
        run: |
          $bindir = Split-Path $env:EXE
          Copy-Item "$env:VCPKG_ROOT\installed\x64-windows\bin\*.dll" $bindir -Force

      - name: Package ZIP
        shell: pwsh
        run: |
          $bindir = Split-Path $env:EXE
          $zip = Join-Path $env:RUNNER_TEMP "LiveVideoMagnification-win64.zip"
          Push-Location $bindir
          7z a $zip *
          Pop-Location
          "ZIP=$zip" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Packaged $zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LiveVideoMagnification-win64
          path: ${{ env.ZIP }}
